/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.okutonda.okudpdv.views.clients;

import com.okutonda.okudpdv.controllers.ClientController;
import com.okutonda.okudpdv.dao.ClientDao;
import com.okutonda.okudpdv.models.Clients;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kenny
 */
public final class JPanelClient extends javax.swing.JPanel {

//    CountryController countryController = new CountryController();
    ClientController clientController = new ClientController();

    public void listClients() {
        ClientDao cDao = new ClientDao();
        List<Clients> list = cDao.list("");
//        jTableClients.setModel(new DefaultTableModel);
        DefaultTableModel data = (DefaultTableModel) jTableClients.getModel();
//        data.setM
        data.setNumRows(0);
        for (Clients c : list) {
            data.addRow(new Object[]{
                c.getId(),
                c.getNif(),
                c.getName(),
                c.getEmail(),
                c.getPhone(),
//                c.getCountry(),
//                c.getCity(),
//                c.getState(),
                c.getAddress(),
                c.getZipCode(),
                c.getStatus(),
                c.getIsDefault()
            });
        }
    }

    public void filterListClients(String txt) {
        ClientDao cDao = new ClientDao();
        List<Clients> list = cDao.filterClient(txt);
        DefaultTableModel data = (DefaultTableModel) jTableClients.getModel();
        data.setNumRows(0);
        for (Clients c : list) {
            data.addRow(new Object[]{
                c.getId(),
                c.getNif(),
                c.getName(),
                c.getEmail(),
                c.getPhone(),
//                c.getCountry(),
//                c.getCity(),
//                c.getState(),
                c.getAddress(),
                c.getZipCode(),
                c.getStatus(),
                c.getIsDefault()
            });
        }
    }

//    public Clients validateClient() {
//
//        Clients cModel = new Clients();
//        if (jTextFieldNifClient.getText().isEmpty() || jTextFieldNifClient.getText().length() < 9) {
//            JOptionPane.showMessageDialog(null, "Campo NIF invalido!! no minimo 9 caracteres");
//        } else if (jTextFieldNameClient.getText().isEmpty() || jTextFieldNameClient.getText().length() < 3) {
//            JOptionPane.showMessageDialog(null, "Campo Nome invalido!! no minimo 3 caracteres");
//        } else if (jTextFieldAddressClient.getText().isEmpty() || jTextFieldAddressClient.getText().length() < 3) {
//            JOptionPane.showMessageDialog(null, "Campo Endereço invalido!! no minimo 3 caracteres");
//        } else {
//            System.out.println("nome:" + jTextFieldNameClient.getText());
//            cModel.setNif(jTextFieldNifClient.getText());
//            cModel.setName(jTextFieldNameClient.getText());
//            cModel.setEmail(jTextFieldEmailClient.getText());
//            cModel.setAddress(jTextFieldAddressClient.getText());
//            cModel.setPhone(jTextFieldPhoneClient.getText());
//            cModel.setCountry((Countries) jComboBoxCountryClient.getSelectedItem());
//            cModel.setCity(jTextFieldCityClient.getText());
//            cModel.setState(jTextFieldStateClient.getText());
//            cModel.setZipCode(jTextFieldZipCodeClient.getText());
//            cModel.setStatus(jComboBoxDefaultClient.getSelectedIndex());
//            cModel.setIsDefault(jComboBoxDefaultClient.getSelectedIndex());
//            return cModel;
//        }
//
//        return null;
//    }

    public void screanListClient() {
        jTabbedPaneClient.setSelectedIndex(0);
        listClients();
    }

//    public void listComboCountries() {
//
//        List<Countries> list = countryController.get("");
//        jComboBoxCountryClient.removeAllItems();
//        for (Countries item : list) {
//            jComboBoxCountryClient.addItem(item);
//        }
//    }

    /**
     * Creates new form JPanelClient
     */
    public JPanelClient() {
        initComponents();
        listClients();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneClient = new javax.swing.JTabbedPane();
        jPanelSearchClient = new javax.swing.JPanel();
        jButtonFilterClientNameTable = new javax.swing.JButton();
        jTextFieldFilterClientNameTable = new javax.swing.JTextField();
        jButtonAlterClientSeletedTable = new javax.swing.JButton();
        jButtonDeleteClientSelectedTable = new javax.swing.JButton();
        jButtonCreateNewClient = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClients = new javax.swing.JTable();
        jButtonCreateViewClient = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(900, 600));
        setPreferredSize(new java.awt.Dimension(900, 600));

        jTabbedPaneClient.setBackground(new java.awt.Color(255, 255, 255));

        jPanelSearchClient.setBackground(new java.awt.Color(204, 204, 255));
        jPanelSearchClient.setPreferredSize(new java.awt.Dimension(900, 600));

        jButtonFilterClientNameTable.setText("Pesquisar");
        jButtonFilterClientNameTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterClientNameTableActionPerformed(evt);
            }
        });

        jTextFieldFilterClientNameTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldFilterClientNameTableKeyReleased(evt);
            }
        });

        jButtonAlterClientSeletedTable.setText("Alterar");
        jButtonAlterClientSeletedTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterClientSeletedTableActionPerformed(evt);
            }
        });

        jButtonDeleteClientSelectedTable.setText("Excluir");
        jButtonDeleteClientSelectedTable.setEnabled(false);
        jButtonDeleteClientSelectedTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteClientSelectedTableActionPerformed(evt);
            }
        });

        jButtonCreateNewClient.setText("Adicionar");
        jButtonCreateNewClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateNewClientActionPerformed(evt);
            }
        });

        jTableClients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NIF", "Nome", "Email", "Telefone", "Endereço", "Zip", "Status", "Padrão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClients);

        jButtonCreateViewClient.setText("Ver");
        jButtonCreateViewClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateViewClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchClientLayout = new javax.swing.GroupLayout(jPanelSearchClient);
        jPanelSearchClient.setLayout(jPanelSearchClientLayout);
        jPanelSearchClientLayout.setHorizontalGroup(
            jPanelSearchClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSearchClientLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanelSearchClientLayout.createSequentialGroup()
                        .addComponent(jTextFieldFilterClientNameTable, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFilterClientNameTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(jButtonCreateNewClient, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButtonCreateViewClient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAlterClientSeletedTable, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteClientSelectedTable, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))))
        );
        jPanelSearchClientLayout.setVerticalGroup(
            jPanelSearchClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchClientLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanelSearchClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFilterClientNameTable, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFilterClientNameTable, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreateNewClient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAlterClientSeletedTable, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteClientSelectedTable, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreateViewClient, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneClient.addTab("Clientes", jPanelSearchClient);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPaneClient)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneClient, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreateViewClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateViewClientActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jTableClients.getValueAt(jTableClients.getSelectedRow(), 0).toString());
        Clients client = clientController.getId(id);
        JOptionPane.showMessageDialog(null, "Cliente :" + client.getName() + "\n NIF:" + client.getNif() + "\n Email:" + client.getEmail() + "\n Endereço:" + client.getAddress());
    }//GEN-LAST:event_jButtonCreateViewClientActionPerformed

    private void jTableClientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientsMouseClicked
        // TODO add your handling code here:
//        jTabbedPaneClient.setSelectedIndex(1);
//        jTextFieldIdClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 0).toString());
//        jTextFieldNifClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 1).toString());
//        jTextFieldNameClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 2).toString());
//        jTextFieldEmailClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 3).toString());
//        jTextFieldPhoneClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 4).toString());
//        jComboBoxCountryClient.setSelectedItem(jTableClients.getValueAt(jTableClients.getSelectedRow(), 5));
//        jTextFieldCityClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 6).toString());
//        jTextFieldStateClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 7).toString());
//        jTextFieldAddressClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 8).toString());
//        jTextFieldZipCodeClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 9).toString());
//        jComboBoxStatusClient.setSelectedIndex((int) jTableClients.getValueAt(jTableClients.getSelectedRow(), 10));
    }//GEN-LAST:event_jTableClientsMouseClicked

    private void jButtonCreateNewClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateNewClientActionPerformed
        // TODO add your handling code here:
//        jTabbedPaneClient.setSelectedIndex(1);

        JDialogFormClient formClient = new JDialogFormClient(null, true);
        formClient.setVisible(true);
        Boolean resp = formClient.getResponse();
        if (resp == true) {
            JOptionPane.showMessageDialog(null, "Usuario salvo com sucesso!!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            listClients();
        }
    }//GEN-LAST:event_jButtonCreateNewClientActionPerformed

    private void jButtonDeleteClientSelectedTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteClientSelectedTableActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jTableClients.getValueAt(jTableClients.getSelectedRow(), 0).toString());
        Clients client = clientController.getId(id);
        //        JOptionPane.showMessageDialog(null, "Cliente :" + client.getName());
        int sair = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja Deletar," + client.getName() + "?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (sair == JOptionPane.YES_OPTION) {
            if (clientController.deleteId(id)) {
                JOptionPane.showMessageDialog(null, "Client excluido com Sucesso!!");
                listClients();
            }
        }
    }//GEN-LAST:event_jButtonDeleteClientSelectedTableActionPerformed

    private void jButtonAlterClientSeletedTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterClientSeletedTableActionPerformed
        // TODO add your handling code here:
//        int id = Integer.parseInt(jTableClients.getValueAt(jTableClients.getSelectedRow(), 0).toString());
//        jTabbedPaneClient.setSelectedIndex(1);
//        jTextFieldIdClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 0).toString());
//        jTextFieldNifClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 1).toString());
//        jTextFieldNameClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 2).toString());
//        jTextFieldEmailClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 3).toString());
//        jTextFieldPhoneClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 4).toString());
//        jComboBoxCountryClient.setSelectedItem(jTableClients.getValueAt(jTableClients.getSelectedRow(), 5));
//        jTextFieldCityClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 6).toString());
//        jTextFieldStateClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 7).toString());
//        jTextFieldAddressClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 8).toString());
//        jTextFieldZipCodeClient.setText(jTableClients.getValueAt(jTableClients.getSelectedRow(), 9).toString());
//        jComboBoxStatusClient.setSelectedIndex(1);

        int value = 0;
        try {
            value = (int) jTableClients.getValueAt(jTableClients.getSelectedRow(), 0);
            System.out.println("1jTableClients id:" + value);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um cliente na tabela!!", "Atencao", JOptionPane.ERROR_MESSAGE);
        } finally {
            System.out.println("2jTableClients id:" + value);
            if (value > 0) {
                JDialogFormClient formClient = new JDialogFormClient(null, true);
                formClient.setClient(value);
                formClient.setVisible(true);
                Boolean resp = formClient.getResponse();
                if (resp == true) {
                    JOptionPane.showMessageDialog(null, "Cliente salvo com sucesso!!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    listClients();
                }
            }
        }
    }//GEN-LAST:event_jButtonAlterClientSeletedTableActionPerformed

    private void jTextFieldFilterClientNameTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFilterClientNameTableKeyReleased
        // TODO add your handling code here:
        String txt = jTextFieldFilterClientNameTable.getText();
        if (!txt.isEmpty()) {
            filterListClients(txt);
        } else {
            listClients();
        }
    }//GEN-LAST:event_jTextFieldFilterClientNameTableKeyReleased

    private void jButtonFilterClientNameTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterClientNameTableActionPerformed
        // TODO add your handling code here:
        String txt = jTextFieldFilterClientNameTable.getText();
        if (!txt.isEmpty()) {
            filterListClients(txt);
        } else {
            listClients();
        }
    }//GEN-LAST:event_jButtonFilterClientNameTableActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButtonAlterClientSeletedTable;
    private javax.swing.JButton jButtonCreateNewClient;
    private javax.swing.JButton jButtonCreateViewClient;
    public javax.swing.JButton jButtonDeleteClientSelectedTable;
    private javax.swing.JButton jButtonFilterClientNameTable;
    private javax.swing.JPanel jPanelSearchClient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPaneClient;
    private javax.swing.JTable jTableClients;
    private javax.swing.JTextField jTextFieldFilterClientNameTable;
    // End of variables declaration//GEN-END:variables
}
