/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.okutonda.okudpdv.views.Orders;

import com.okutonda.okudpdv.controllers.OrderController;
import com.okutonda.okudpdv.data.entities.Order;
import com.okutonda.okudpdv.helpers.UtilSales;
import com.okutonda.okudpdv.views.sales.JDialogGenerateNoteCredit;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hr
 */
public class JPanelOrders extends javax.swing.JPanel {

    OrderController orderController = new OrderController();

    /**
     * Creates new form JPanelOrders
     */
    public JPanelOrders() {
        initComponents();
        listOrder();
    }

    public void listTable(List<Order> list) {
//        List<Order> list = orderController.get();
        DefaultTableModel data = (DefaultTableModel) jTableOrders.getModel();
        data.setNumRows(0);

        for (Order c : list) {
            data.addRow(new Object[]{
                c.getId(),
                UtilSales.FormatedNumberPrefix2(c.getNumber(), c.getYear(), c.getPrefix()),
                c.getDatecreate(),
                c.getTotal(),
                c.getClient().getName(),
                c.getSeller().getName(),
                c.getStatus(),}
            );
        }
    }

    public void listOrder() {
        List<Order> list = orderController.getAll();
        listTable(list);
    }

    public void filterListOrder(String txt) {
//        List<Order> list = orderController.filter(txt);
        List<Order> list = orderController.filterDate(LocalDate.MIN, LocalDate.MIN);
        listTable(list);
    }

    public void filterListOrderFromDate(LocalDate dateFrom, LocalDate dateTo) {
        List<Order> list = orderController.filterDate(dateFrom, dateTo);
        listTable(list);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFR = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOrders = new javax.swing.JTable();
        jButtonDeleteOrder = new javax.swing.JButton();
        jButtonViewOrder = new javax.swing.JButton();
        jButtonPrintOrder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonFilterOrder = new javax.swing.JButton();
        jFormattedTextFieldDateFinish = new javax.swing.JFormattedTextField();
        jFormattedTextFieldDateStart = new javax.swing.JFormattedTextField();
        jButtonGenerateNoteCreditFR = new javax.swing.JButton();

        jPanelFR.setBackground(new java.awt.Color(204, 204, 255));

        jTableOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Fatura", "Data", "Total", "Cliente", "Seller", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableOrders);

        jButtonDeleteOrder.setBackground(new java.awt.Color(255, 0, 0));
        jButtonDeleteOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Trash Can.png"))); // NOI18N
        jButtonDeleteOrder.setText("Apagar");
        jButtonDeleteOrder.setContentAreaFilled(false);
        jButtonDeleteOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDeleteOrder.setEnabled(false);
        jButtonDeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteOrderActionPerformed(evt);
            }
        });

        jButtonViewOrder.setBackground(new java.awt.Color(255, 255, 102));
        jButtonViewOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Binoculars.png"))); // NOI18N
        jButtonViewOrder.setText("Ver");
        jButtonViewOrder.setContentAreaFilled(false);
        jButtonViewOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewOrderActionPerformed(evt);
            }
        });

        jButtonPrintOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/printer_8139457.png"))); // NOI18N
        jButtonPrintOrder.setText("Imprimir");
        jButtonPrintOrder.setContentAreaFilled(false);
        jButtonPrintOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonPrintOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintOrderActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Data Inicio:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Data Fim:");

        jButtonFilterOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonFilterOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Search.png"))); // NOI18N
        jButtonFilterOrder.setText("Filtrar");
        jButtonFilterOrder.setBorderPainted(false);
        jButtonFilterOrder.setContentAreaFilled(false);
        jButtonFilterOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonFilterOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterOrderActionPerformed(evt);
            }
        });

        try {
            jFormattedTextFieldDateFinish.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/20##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldDateFinish.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        try {
            jFormattedTextFieldDateStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/20##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldDateStart.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jButtonGenerateNoteCreditFR.setBackground(new java.awt.Color(153, 255, 255));
        jButtonGenerateNoteCreditFR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Document.png"))); // NOI18N
        jButtonGenerateNoteCreditFR.setText("Gerar Nota de Credito");
        jButtonGenerateNoteCreditFR.setContentAreaFilled(false);
        jButtonGenerateNoteCreditFR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonGenerateNoteCreditFR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateNoteCreditFRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFRLayout = new javax.swing.GroupLayout(jPanelFR);
        jPanelFR.setLayout(jPanelFRLayout);
        jPanelFRLayout.setHorizontalGroup(
            jPanelFRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelFRLayout.createSequentialGroup()
                        .addGroup(jPanelFRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedTextFieldDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelFRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFRLayout.createSequentialGroup()
                                .addComponent(jFormattedTextFieldDateFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonFilterOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                                .addComponent(jButtonGenerateNoteCreditFR)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonDeleteOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonViewOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPrintOrder))
                            .addGroup(jPanelFRLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(88, 88, 88)))))
                .addContainerGap())
        );
        jPanelFRLayout.setVerticalGroup(
            jPanelFRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFRLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelFRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldDateFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFilterOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonViewOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPrintOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonGenerateNoteCreditFR, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 971, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelFR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelFR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteOrderActionPerformed
        // TODO add your handling code here:
        int id = 0;
        try {
            id = (int) jTableOrders.getValueAt(jTableOrders.getSelectedRow(), 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um Venda na tabela!!", "Atencao", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (id > 0) {
                ////        Order order = orderController.getId(id);
                //                JDialogDetailOrder jdOrder = new JDialogDetailOrder(null, true);
                //                jdOrder.setOrder(id);
                ////        jdOrder.setOrder(order);
                //                jdOrder.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonDeleteOrderActionPerformed

    private void jButtonViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewOrderActionPerformed
        // TODO add your handling code here:
        int id = 0;
        try {
            id = (int) jTableOrders.getValueAt(jTableOrders.getSelectedRow(), 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um Venda na tabela!!", "Atencao", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (id > 0) {
                //        Order order = orderController.getId(id);
                JDialogDetailOrder jdOrder = new JDialogDetailOrder(null, true);
                jdOrder.setOrder(id);
                //        jdOrder.setOrder(order);
                jdOrder.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonViewOrderActionPerformed

    private void jButtonPrintOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintOrderActionPerformed
        // TODO add your handling code here:
        int id = 0;
        try {
            id = (int) jTableOrders.getValueAt(jTableOrders.getSelectedRow(), 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um Venda na tabela para imprimir!!", "Atencao", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (id > 0) {
                ////        Order order = orderController.getId(id);
                //                JDialogDetailOrder jdOrder = new JDialogDetailOrder(null, true);
                //                jdOrder.setOrder(id);
                ////        jdOrder.setOrder(order);
                //                jdOrder.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonPrintOrderActionPerformed

    private void jButtonFilterOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterOrderActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/M/yyy");
        LocalDate dateFrom = LocalDate.parse(jFormattedTextFieldDateStart.getText(), formatter);
        LocalDate dateTo = LocalDate.parse(jFormattedTextFieldDateFinish.getText(), formatter);
        filterListOrderFromDate(dateFrom, dateTo);
    }//GEN-LAST:event_jButtonFilterOrderActionPerformed

    private void jButtonGenerateNoteCreditFRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateNoteCreditFRActionPerformed
        // TODO add your handling code here:
        int id = 0;
        try {
            id = (int) jTableOrders.getValueAt(jTableOrders.getSelectedRow(), 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um Venda na tabela para gerar uma nota de credito!!", "Atencao", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (id > 0) {
                JDialogGenerateNoteCredit jdNoteCredit = new JDialogGenerateNoteCredit(null, true);
                jdNoteCredit.setNoteCredit(id, "FR");
                jdNoteCredit.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonGenerateNoteCreditFRActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButtonDeleteOrder;
    private javax.swing.JButton jButtonFilterOrder;
    public javax.swing.JButton jButtonGenerateNoteCreditFR;
    private javax.swing.JButton jButtonPrintOrder;
    private javax.swing.JButton jButtonViewOrder;
    private javax.swing.JFormattedTextField jFormattedTextFieldDateFinish;
    private javax.swing.JFormattedTextField jFormattedTextFieldDateStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelFR;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableOrders;
    // End of variables declaration//GEN-END:variables
}
