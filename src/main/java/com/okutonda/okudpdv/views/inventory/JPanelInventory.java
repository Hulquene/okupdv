/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.okutonda.okudpdv.views.inventory;

import com.okutonda.okudpdv.ui.TemaUI;
import com.okutonda.okudpdv.utilities.JpanelLoader;
import com.okutonda.okudpdv.views.products.JPanelProduct;
import com.okutonda.okudpdv.views.purchases.JPanelPurchases;
import com.okutonda.okudpdv.views.stock.JPanelStock;
import javax.swing.JOptionPane;

/**
 *
 * @author hr
 */
public class JPanelInventory extends javax.swing.JPanel {

    JpanelLoader jpload = new JpanelLoader();

    /**
     * Creates new form JPanelInventory
     */
    public JPanelInventory() {
        initComponents();
        applyTheme();
        JPanelProduct pProducts = new JPanelProduct();
        jpload.jPanelLoader(jPanelInventoryContent, pProducts);
        jLabelJpanelSelected.setText("PRODUTOS");
//           
    }

    private void applyTheme() {
//        TemaCleaner.clearBuilderOverrides(getContentPane());
        // Painel de fundo da janela
//        jPanelSidebar.setBackground(TemaCores.BG_LIGHT);

        TemaUI.aplicarTitulo(jLabelJpanelSelected);
//        jPanelSidebar.setBackground(TemaCores.PRIMARY);
        // Card do login
//        TemaUI.aplicarPainelHeader(jPanelSidebar, TemaCores.PRIMARY);
        // Título
//        TemaUI.aplicarTitulo(jLabelNameCompany);
//        jLabelNameCompany.setForeground(TemaCores.PRIMARY);
        // Labels
//        jLabel1.setForeground(TemaCores.TEXT_DARK);   // "Email:"
//        jLabel2.setForeground(TemaCores.TEXT_DARK);   // "Senha:"
        // Campos
//        TemaUI.aplicarCampoTexto(jTextFieldEmail);
//        TemaUI.aplicarCampoTexto(jPasswordFieldPassword);
        // Botões
        TemaUI.aplicarBotaoPrimario(jButtonProdAndService);
        TemaUI.aplicarBotaoPrimario(jButtonInvStoque);
        TemaUI.aplicarBotaoPrimario(jButtonInventoryPurchases);
        TemaUI.aplicarBotaoPrimario(jButtonInventoryFisic);
        TemaUI.aplicarBotaoPrimario(jButtonInventoryReport);
//        TemaUI.aplicarBotaoPrimario(jButtonLogin);
//        jButtonSuport.setForeground(TemaCores.TEXT_GRAY);
//        jButtonAbout.setForeground(TemaCores.TEXT_GRAY);
//        jButtonInstall.setForeground(TemaCores.PRIMARY);
//        jButtonCloseScreen.setForeground(TemaCores.ERROR);
        // Status de BD (cor dinâmica) — chama depois de testar a conexão
//        updateDbStatusLabel(this.conn != null);
        // Borda superior/rodapé (opcional)
        // getRootPane().setBorder(new javax.swing.border.MatteBorder(0, 0, 2, 0, TemaCores.PRIMARY));
        // Se o GUI Builder deixou cores hardcoded em initComponents,
        // isso aqui sobrescreve. Se puder, remova as cores fixas no builder.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonProdAndService = new javax.swing.JButton();
        jButtonInvStoque = new javax.swing.JButton();
        jButtonInventoryPurchases = new javax.swing.JButton();
        jButtonInventoryFisic = new javax.swing.JButton();
        jButtonInventoryReport = new javax.swing.JButton();
        jLabelJpanelSelected = new javax.swing.JLabel();
        jPanelInventoryContent = new javax.swing.JPanel();

        jToolBar1.setRollover(true);

        jButtonProdAndService.setText("Produtos&Serviços");
        jButtonProdAndService.setFocusable(false);
        jButtonProdAndService.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonProdAndService.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonProdAndService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProdAndServiceActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonProdAndService);

        jButtonInvStoque.setText("Stock");
        jButtonInvStoque.setFocusable(false);
        jButtonInvStoque.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonInvStoque.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonInvStoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInvStoqueActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonInvStoque);

        jButtonInventoryPurchases.setText("Compras");
        jButtonInventoryPurchases.setFocusable(false);
        jButtonInventoryPurchases.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonInventoryPurchases.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonInventoryPurchases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInventoryPurchasesActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonInventoryPurchases);

        jButtonInventoryFisic.setText("Inventário Físico");
        jButtonInventoryFisic.setFocusable(false);
        jButtonInventoryFisic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonInventoryFisic.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonInventoryFisic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInventoryFisicActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonInventoryFisic);

        jButtonInventoryReport.setText("Relatórios");
        jButtonInventoryReport.setFocusable(false);
        jButtonInventoryReport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonInventoryReport.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonInventoryReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInventoryReportActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonInventoryReport);

        jLabelJpanelSelected.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelJpanelSelected.setText("Tela");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                .addComponent(jLabelJpanelSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelJpanelSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelInventoryContentLayout = new javax.swing.GroupLayout(jPanelInventoryContent);
        jPanelInventoryContent.setLayout(jPanelInventoryContentLayout);
        jPanelInventoryContentLayout.setHorizontalGroup(
            jPanelInventoryContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelInventoryContentLayout.setVerticalGroup(
            jPanelInventoryContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelInventoryContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelInventoryContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonProdAndServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProdAndServiceActionPerformed
        // TODO add your handling code here:
        JPanelProduct pProducts = new JPanelProduct();
        jpload.jPanelLoader(jPanelInventoryContent, pProducts);
        jLabelJpanelSelected.setText("PRODUTOS");
    }//GEN-LAST:event_jButtonProdAndServiceActionPerformed

    private void jButtonInvStoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInvStoqueActionPerformed
        // TODO add your handling code here:
        JPanelStock pStoque = new JPanelStock();
        jpload.jPanelLoader(jPanelInventoryContent, pStoque);
        jLabelJpanelSelected.setText("ESTOQUE");
    }//GEN-LAST:event_jButtonInvStoqueActionPerformed

    private void jButtonInventoryPurchasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInventoryPurchasesActionPerformed
        // TODO add your handling code here:
        JPanelPurchases pPurchase = new JPanelPurchases();
        jpload.jPanelLoader(jPanelInventoryContent, pPurchase);
        jLabelJpanelSelected.setText("COMPRA");
    }//GEN-LAST:event_jButtonInventoryPurchasesActionPerformed

    private void jButtonInventoryFisicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInventoryFisicActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Sem tela!! Contagem de stock (inventário real vs. sistema)\n"
                + "\n"
                + "Ajustes de stock (acertos de diferença)", "Alerta", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonInventoryFisicActionPerformed

    private void jButtonInventoryReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInventoryReportActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Sem tela!! Relatórios\n"
                + "\n"
                + "Relatório de stock atual\n"
                + "\n"
                + "Relatório de movimentações de stock\n"
                + "\n"
                + "Relatório de compras por fornecedor\n"
                + "\n"
                + "Relatório de produtos mais vendidos/mais comprados", "Alerta", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonInventoryReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonInvStoque;
    private javax.swing.JButton jButtonInventoryFisic;
    private javax.swing.JButton jButtonInventoryPurchases;
    private javax.swing.JButton jButtonInventoryReport;
    private javax.swing.JButton jButtonProdAndService;
    private javax.swing.JLabel jLabelJpanelSelected;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelInventoryContent;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
