package com.okutonda.okudpdv.controllers;

// ‚ùå REMOVER ESTE IMPORT
// import com.okutonda.okudpdv.jdbc.ConnectionDatabase;

// ‚úÖ ADICIONAR ESTES IMPORTS
import com.okutonda.okudpdv.data.config.HibernateUtil;
import com.okutonda.okudpdv.data.dao.OptionsDao;
import com.okutonda.okudpdv.data.entities.Options;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 * Controlador de Instala√ß√£o do Sistema
 * 
 * @author kenny
 */
public class Install {
    
    private final OptionController optionController;
    
    public Install() {
        this.optionController = new OptionController();
    }
    
    /**
     * Executa a instala√ß√£o inicial do sistema
     */
    public boolean runInitialInstallation() {
        Session session = HibernateUtil.getCurrentSession();
        Transaction tx = null;
        
        try {
            tx = session.beginTransaction();
            
            // üîπ Configura√ß√µes b√°sicas da empresa
            saveDefaultOption("company_name", "Minha Empresa", "active");
            saveDefaultOption("company_nif", "999999999", "active");
            saveDefaultOption("company_address", "Endere√ßo da Empresa", "active");
            saveDefaultOption("company_city", "Cidade", "active");
            saveDefaultOption("company_postal_code", "0000-000", "active");
            saveDefaultOption("company_country", "Angola", "active");
            saveDefaultOption("company_phone", "+244 900 000 000", "active");
            saveDefaultOption("company_email", "empresa@exemplo.com", "active");
            saveDefaultOption("company_website", "www.empresa.com", "active");
            
            // üîπ Configura√ß√µes do sistema
            saveDefaultOption("currency_code", "AOA", "active");
            saveDefaultOption("tax_accounting_basis", "F", "active"); // F=Fatura√ß√£o
            saveDefaultOption("tax_entity", "AO", "active");
            saveDefaultOption("product_id", "Okudpdv/Okutonda", "active");
            saveDefaultOption("product_version", "1.0.0", "active");
            saveDefaultOption("file_type", "N", "active"); // N=Normal
            
            // üîπ Marcar instala√ß√£o como completa
            saveDefaultOption("install_complete", "true", "active");
            
            tx.commit();
            System.out.println("‚úÖ Instala√ß√£o conclu√≠da com sucesso!");
            return true;
            
        } catch (Exception e) {
            if (tx != null && tx.isActive()) {
                tx.rollback();
            }
            System.err.println("‚ùå Erro durante a instala√ß√£o: " + e.getMessage());
            return false;
        }
    }
    
    /**
     * Salva uma op√ß√£o padr√£o apenas se n√£o existir
     */
    private void saveDefaultOption(String name, String value, String status) {
        // Verifica se a op√ß√£o j√° existe
        String existingValue = optionController.getOptionValue(name);
        if (existingValue.isEmpty()) {
            // S√≥ salva se n√£o existir
            optionController.saveOption(name, value, status);
            System.out.println("üîπ Op√ß√£o criada: " + name);
        } else {
            System.out.println("üîπ Op√ß√£o j√° existe: " + name);
        }
    }
    
    /**
     * Verifica se o sistema j√° foi instalado
     */
    public boolean isSystemInstalled() {
        return optionController.isInstallationComplete();
    }
    
    /**
     * Executa migra√ß√µes ou atualiza√ß√µes do sistema
     */
    public boolean runSystemUpdates() {
        // Aqui voc√™ pode adicionar l√≥gica para migra√ß√µes futuras
        System.out.println("üîπ Verificando atualiza√ß√µes do sistema...");
        
        // Exemplo: Adicionar novas op√ß√µes em vers√µes futuras
        saveDefaultOption("software_validation_number", "", "active");
        saveDefaultOption("company_country_code", "AO", "active");
        saveDefaultOption("company_province", "", "active");
        saveDefaultOption("company_state", "", "active");
        saveDefaultOption("company_address_detail", "", "active");
        
        return true;
    }
}